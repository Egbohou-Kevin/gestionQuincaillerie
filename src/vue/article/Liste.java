/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue.article;

import gestion.Article.Article;
import gestion.Article.Categorie;
import gestion.Article.Fournisseur;
import gestion.Authentification.AbstractDAO;
import gestion.Authentification.Connexion;
import gestion.Authentification.DAO;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import vue.IVue;

/**
 *
 * @author VEK
 */
public class Liste extends javax.swing.JPanel {
    boolean Admin=false;
    int IDGest=0;
    private ArrayList<ArrayList<Object>> data;
    private ArrayList<String> title= new ArrayList<String>();
    TModel modele;
    Connection con = Connexion.getConnection();
    /**
     * Creates new form Liste
     */
    public Liste(boolean ad,int gest) {
        Admin=ad;
        IDGest=gest;
        initComponents();
        afficher();
        jComboBox_cat.setVisible(false);
        jComboBox_frs.setVisible(false);
        jComboBox_sup_prix.setVisible(false);
        jComboBox_sup_stock.setVisible(false);
        jTextField_nom.setVisible(false);
        jTextField_prix.setVisible(false);
        jSpinner_stock.setVisible(false);
    }
    public void afficher(){
        //affichage du tableau sans recherche
        if(Admin){
            title.add("Id");
            title.add("Nom");
            title.add("Commentaire");
            title.add("Stock");
            title.add("Prix");
            title.add("Categorie");
            title.add("Fournisseur");
            title.add("Modification");
            title.add("Suppression");
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:artdao.recuperer()){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele=new TModel(data, title);
            tableau.setModel(modele);
            tableau.getColumn("Modification").setCellRenderer(new ButtonRenderer());
            tableau.getColumn("Suppression").setCellRenderer(new ButtonRenderer());
            tableau.getColumn("Modification").setCellEditor(new ButtonEditor(new JCheckBox())); 
            tableau.getColumn("Suppression").setCellEditor(new ButtonSuppEditor(new JCheckBox(),Admin,IDGest)); 
            }
        else{
            title.add("Id");
            title.add("Nom");
            title.add("Commentaire");
            title.add("Stock");
            title.add("Prix");
            title.add("Categorie");
            title.add("Fournisseur");
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:artdao.recuperer()){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele=new TModel(data, title);
            tableau.setModel(modele);
            jButton_ajout.setVisible(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox_nom = new javax.swing.JCheckBox();
        jTextField_nom = new javax.swing.JTextField();
        jCheckBox_prix = new javax.swing.JCheckBox();
        jTextField_prix = new javax.swing.JTextField();
        jCheckBox_cat = new javax.swing.JCheckBox();
        jComboBox_cat = new javax.swing.JComboBox<>();
        jComboBox_sup_prix = new javax.swing.JComboBox<>();
        jCheckBox_stock = new javax.swing.JCheckBox();
        jSpinner_stock = new javax.swing.JSpinner();
        jComboBox_sup_stock = new javax.swing.JComboBox<>();
        jComboBox_frs = new javax.swing.JComboBox<>();
        jCheckBox_frs = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableau = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton_ajout = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Type recherche :");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Recherche :");

        jCheckBox_nom.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_nom.setText("Nom");
        jCheckBox_nom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_nomItemStateChanged(evt);
            }
        });

        jTextField_nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_nomKeyReleased(evt);
            }
        });

        jCheckBox_prix.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_prix.setText("Prix");
        jCheckBox_prix.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_prixItemStateChanged(evt);
            }
        });

        jTextField_prix.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_prixKeyReleased(evt);
            }
        });

        jCheckBox_cat.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_cat.setText("Categorie");
        jCheckBox_cat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_catItemStateChanged(evt);
            }
        });

        jComboBox_cat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_catItemStateChanged(evt);
            }
        });

        jComboBox_sup_prix.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Supérieur", "Inférieur", "Egale" }));
        jComboBox_sup_prix.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_sup_prixItemStateChanged(evt);
            }
        });

        jCheckBox_stock.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_stock.setText("Stock");
        jCheckBox_stock.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_stockItemStateChanged(evt);
            }
        });

        jSpinner_stock.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_stockStateChanged(evt);
            }
        });

        jComboBox_sup_stock.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Supérieur", "Inférieur", "Egale" }));
        jComboBox_sup_stock.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_sup_stockItemStateChanged(evt);
            }
        });

        jComboBox_frs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_frsItemStateChanged(evt);
            }
        });

        jCheckBox_frs.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_frs.setText("Fournisseur");
        jCheckBox_frs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_frsItemStateChanged(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(0, 102, 0));

        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Valider");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox_nom)
                        .addGap(64, 64, 64))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_prix, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_sup_prix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox_prix))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox_cat, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_cat))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSpinner_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_sup_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox_stock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_frs)
                    .addComponent(jComboBox_frs, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(204, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_nom)
                    .addComponent(jLabel7)
                    .addComponent(jCheckBox_prix)
                    .addComponent(jCheckBox_cat)
                    .addComponent(jCheckBox_stock)
                    .addComponent(jCheckBox_frs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_prix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_sup_prix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinner_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_sup_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_frs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addGap(15, 15, 15)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tableau.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableau.setRowHeight(25);
        tableau.getTableHeader().setResizingAllowed(false);
        jScrollPane1.setViewportView(tableau);

        jPanel3.setBackground(new java.awt.Color(0, 102, 0));

        jButton_ajout.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton_ajout.setForeground(new java.awt.Color(255, 255, 255));
        jButton_ajout.setText("Ajouter");
        jButton_ajout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_ajout.setContentAreaFilled(false);
        jButton_ajout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ajoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton_ajout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton_ajout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 983, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox_nomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_nomItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_nom.isSelected()){
            jTextField_nom.setVisible(true);
            jPanel1.validate();
            affichageNom();
        }
        else
            jTextField_nom.setVisible(false);
            jPanel1.validate();
    }//GEN-LAST:event_jCheckBox_nomItemStateChanged

    private void jTextField_nomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_nomKeyReleased
        // TODO add your handling code here:
        ArrayList<Article> tabart=nom_selected();
        if(jCheckBox_nom.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jTextField_nomKeyReleased

    private void jCheckBox_prixItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_prixItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_prix.isSelected()){
            jTextField_prix.setVisible(true);
            jComboBox_sup_prix.setVisible(true);
            jPanel1.validate();
            affichagePrix();
        }
        else{
            jTextField_prix.setVisible(false);
            jComboBox_sup_prix.setVisible(false);
            jPanel1.validate();
        }
    }//GEN-LAST:event_jCheckBox_prixItemStateChanged

    private void jTextField_prixKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_prixKeyReleased
        // TODO add your handling code here:
        if(!isNumeric(evt.getKeyChar())){
            jTextField_prix.setText(jTextField_prix.getText().replace(String.valueOf(evt.getKeyChar()),""));
        }
        
        ArrayList<Article> tabart=prix_selected();
        if(jCheckBox_prix.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jTextField_prixKeyReleased
    
    private boolean isNumeric(char c){
        try{
            Integer.parseInt(String.valueOf(c));
        }
        catch(NumberFormatException ex){
            return false;
        }
        return true;
    }
    
    private void jComboBox_sup_prixItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_sup_prixItemStateChanged
        // TODO add your handling code here:
        ArrayList<Article> tabart=prix_selected();
        if(jCheckBox_prix.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jComboBox_sup_prixItemStateChanged

    private void jCheckBox_catItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_catItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_cat.isSelected()){
            jComboBox_cat.removeAllItems();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Categorie> catdao=fac.getCategorieDAO();
            for(Categorie cat:catdao.recuperer()){
                jComboBox_cat.addItem(cat);
            }
            jComboBox_cat.setVisible(true);
            jPanel1.validate();
        }
        else{
            jComboBox_cat.setVisible(false);
            jPanel1.validate();
        }
    }//GEN-LAST:event_jCheckBox_catItemStateChanged

    private void jCheckBox_stockItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_stockItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_stock.isSelected()){
            jSpinner_stock.setVisible(true);
            jComboBox_sup_stock.setVisible(true);
            jPanel1.validate();
        }
        else{
            jSpinner_stock.setVisible(false);
            jComboBox_sup_stock.setVisible(false);
            jPanel1.validate();
        }
    }//GEN-LAST:event_jCheckBox_stockItemStateChanged

    private void jCheckBox_frsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_frsItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_frs.isSelected()){
            jComboBox_frs.removeAllItems();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Fournisseur> frsdao=fac.getFournisseurDAO();
            for(Fournisseur frs:frsdao.recuperer()){
                jComboBox_frs.addItem(frs);
            }
            jComboBox_frs.setVisible(true);
            jPanel1.validate();
        }
        else{
            jComboBox_frs.setVisible(false);
            jPanel1.validate();
        }
    }//GEN-LAST:event_jCheckBox_frsItemStateChanged

    private void jButton_ajoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ajoutActionPerformed
        // TODO add your handling code here:
        IVue vue = new Ajouter(tableau);
        vue.afficher();
    }//GEN-LAST:event_jButton_ajoutActionPerformed

    private void jComboBox_catItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_catItemStateChanged
        // TODO add your handling code here:
        ArrayList<Article> tabart=categorie_selected();
        if(jCheckBox_cat.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jComboBox_catItemStateChanged

    private void jComboBox_frsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_frsItemStateChanged
        // TODO add your handling code here:
        ArrayList<Article> tabart=fournisseur_selected();
        if(jCheckBox_frs.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jComboBox_frsItemStateChanged

    private void jComboBox_sup_stockItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_sup_stockItemStateChanged
        // TODO add your handling code here:
        ArrayList<Article> tabart=stock_selected();
        if(jCheckBox_stock.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jComboBox_sup_stockItemStateChanged

    private void jSpinner_stockStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_stockStateChanged
        // TODO add your handling code here:
        ArrayList<Article> tabart=stock_selected();
        if(jCheckBox_stock.isSelected()){
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jSpinner_stockStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ArrayList<Article> tabart=new ArrayList<Article>();//donnees de la table
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected()){
            tabart=nom_prix_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_cat.isSelected()){
            tabart=nom_categorie_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_stock.isSelected()){
            tabart=nom_stock_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_frs.isSelected()){
            tabart=nom_frs_selected();
        }
        if(jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected()){
            tabart=prix_categorie_selected();
        }
        if(jCheckBox_prix.isSelected() && jCheckBox_frs.isSelected()){
            tabart=prix_frs_selected();
        }
        if(jCheckBox_prix.isSelected() && jCheckBox_stock.isSelected()){
            tabart=prix_stock_selected();
        }
        if(jCheckBox_stock.isSelected() && jCheckBox_cat.isSelected()){
            tabart=categorie_stock_selected();
        }
        if(jCheckBox_stock.isSelected() && jCheckBox_frs.isSelected()){
            tabart=fournisseur_stock_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected()){
            tabart=nom_prix_categorie_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected() && jCheckBox_frs.isSelected()){
            tabart=nom_prix_frs_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected() && jCheckBox_stock.isSelected()){
            tabart=nom_prix_stock_selected();
        }
        if(jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected() && jCheckBox_frs.isSelected()){
            tabart=prix_categorie_frs_selected();
        }
        if(jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected() && jCheckBox_stock.isSelected()){
            tabart=prix_categorie_stock_selected();
        }
        if(jCheckBox_cat.isSelected() && jCheckBox_frs.isSelected() && jCheckBox_stock.isSelected()){
            tabart=categorie_frs_stock_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected() && jCheckBox_frs.isSelected()){
            tabart=nom_prix_categorie_frs_stock_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected() && jCheckBox_stock.isSelected()){
            tabart=nom_prix_categorie_stock_selected();
        }
        if(jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected() && jCheckBox_frs.isSelected() && jCheckBox_stock.isSelected()){
            tabart=prix_categorie_frs_stock_selected();
        }
        if(jCheckBox_nom.isSelected() && jCheckBox_prix.isSelected() && jCheckBox_cat.isSelected() && jCheckBox_frs.isSelected() && jCheckBox_stock.isSelected()){
            tabart=nom_prix_categorie_frs_stock_selected();
        }
        
        if(true){//affichage des donnees
            if(Admin){
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tabart){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public ArrayList<Article> nom_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Connection con=Connexion.getConnection();
        ArrayList<Article> tab=new ArrayList<Article>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Article> artdao=fac.getArticleDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM article WHERE nomart like "+" \"%"+nom+"%\"");
            while(result.next()){
                tab.add(artdao.rechercher(result.getInt("idart")));
            }
        }
        catch(Exception e){
            
        }
        return tab;
    }
    
    public ArrayList<Article>  prix_selected(){
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix);
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix);
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix);
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> categorie_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        Connection con=Connexion.getConnection();
        ArrayList<Article> tab=new ArrayList<Article>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Article> artdao=fac.getArticleDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM article WHERE idcat="+categorie.getIdcat());
            while(result.next()){
                tab.add(artdao.rechercher(result.getInt("idart")));
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return tab;
    }
    
    public ArrayList<Article> fournisseur_selected(){
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        Connection con=Connexion.getConnection();
        ArrayList<Article> tab=new ArrayList<Article>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Article> artdao=fac.getArticleDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM article WHERE idfrs="+frs.getIdfrs());
            while(result.next()){
                tab.add(artdao.rechercher(result.getInt("idart")));
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return tab;
    }
    
    public ArrayList<Article> stock_selected(){
        ArrayList<Article> tab=new ArrayList<Article>();
        int stock=0;
        if(jSpinner_stock.getValue().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_stock.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock>="+stock);
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock<="+stock);
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock="+stock);
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_selected(){
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        String nom="";
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            nom=jTextField_nom.getText();
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND"+" nomart like "+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND"+" nomart like "+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND"+" nomart like "+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_categorie_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        Connection con=Connexion.getConnection();
        ArrayList<Article> tab=new ArrayList<Article>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Article> artdao=fac.getArticleDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM article WHERE idcat="+categorie.getIdcat()+" AND nomart like "+" \"%"+nom+"%\"");
            while(result.next()){
                tab.add(artdao.rechercher(result.getInt("idart")));
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return tab;
    }
    
    public ArrayList<Article> nom_frs_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        Connection con=Connexion.getConnection();
        ArrayList<Article> tab=new ArrayList<Article>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Article> artdao=fac.getArticleDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM article WHERE idfrs="+frs.getIdfrs()+" AND nomart like "+" \"%"+nom+"%\"");
            while(result.next()){
                tab.add(artdao.rechercher(result.getInt("idart")));
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return tab;
    }
    
    public ArrayList<Article> nom_stock_selected(){
        String nom;
        nom=jTextField_nom.getText();
        ArrayList<Article> tab=new ArrayList<Article>();
        int stock=0;
        if(jSpinner_stock.getValue().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_stock.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock>="+stock+" AND nomart like "+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock<="+stock+" AND nomart like "+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock="+stock+" AND nomart like "+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
        return tab; 
    }
    
    public ArrayList<Article> prix_categorie_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> prix_frs_selected(){
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND idfrs="+frs.getIdfrs());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND idfrs="+frs.getIdfrs());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND idfrs="+frs.getIdfrs());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> prix_stock_selected(){
        int stock=0;
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock>="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock<="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock>="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock<="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock>="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock<="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock="+stock);
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    /*public ArrayList<Article> categorie_frs_selected(){
        
    }*/
    
    public ArrayList<Article> categorie_stock_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        int stock=0;
        if(jSpinner_stock.getValue().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_stock.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock>="+stock+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock<="+stock+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock="+stock+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
        return tab;
    }
    
    public ArrayList<Article> fournisseur_stock_selected(){
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        int stock=0;
        if(jSpinner_stock.getValue().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_stock.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock>="+stock+" AND idfrs="+frs.getIdfrs());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock<="+stock+" AND idfrs="+frs.getIdfrs());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock="+stock+" AND idfrs="+frs.getIdfrs());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_categorie_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND idcat="+categorie.getIdcat()+" AND nomart like"+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND idcat="+categorie.getIdcat()+" AND nomart like"+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND idcat="+categorie.getIdcat()+" AND nomart like"+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_frs_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_stock_selected(){
        String nom;
        nom=jTextField_nom.getText();
        int stock=0;
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock>="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock<="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock>="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock<="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock>="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock<="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock="+stock+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> prix_categorie_frs_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND idfrs="+frs.getIdfrs()+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND idfrs="+frs.getIdfrs()+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND idfrs="+frs.getIdfrs()+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> prix_categorie_stock_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        int stock=0;
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> categorie_frs_stock_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        int stock=0;
        if(jSpinner_stock.getValue().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_stock.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock>="+stock+" AND idfrs="+frs.getIdfrs()+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock<="+stock+" AND idfrs="+frs.getIdfrs()+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_stock.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE stock="+stock+" AND idfrs="+frs.getIdfrs()+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_categorie_frs_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        String nom;
        nom=jTextField_nom.getText();
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    Statement req=con.createStatement();
                    ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                    while(result.next()){
                        tab.add(artdao.rechercher(result.getInt("idart")));
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_categorie_stock_selected(){
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        String nom;
        nom=jTextField_nom.getText();
        int stock=0;
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock>="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock<="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock>="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock<="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock>="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock<="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock="+stock+" AND nomart like"+" \"%"+nom+"%\""+" AND idcat="+categorie.getIdcat());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> prix_categorie_frs_stock_selected(){
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        int stock=0;
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs());
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public ArrayList<Article> nom_prix_categorie_frs_stock_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Fournisseur frs;
        frs=(Fournisseur)jComboBox_frs.getSelectedItem();
        Categorie categorie;
        categorie=(Categorie)jComboBox_cat.getSelectedItem();
        int stock=0;
        ArrayList<Article> tab=new ArrayList<Article>();
        float prix=0;
        if(jTextField_prix.getText().equals("")){
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
        }
        else{
            prix=Float.parseFloat(jTextField_prix.getText());
            stock=Integer.parseInt(jSpinner_stock.getValue().toString());
            Connection con=Connexion.getConnection();
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            try{
                if(jComboBox_sup_prix.getSelectedIndex()==0){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart>="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==1){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart<="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
                if(jComboBox_sup_prix.getSelectedIndex()==2){
                    if(jComboBox_sup_stock.getSelectedIndex()==0){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock>="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==1){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock<="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                    if(jComboBox_sup_stock.getSelectedIndex()==2){
                        Statement req=con.createStatement();
                        ResultSet result=req.executeQuery("SELECT * FROM article WHERE prixart="+prix+" AND stock="+stock+" AND idcat="+categorie.getIdcat()+" AND idfrs="+frs.getIdfrs()+" AND nomart like"+" \"%"+nom+"%\"");
                        while(result.next()){
                            tab.add(artdao.rechercher(result.getInt("idart")));
                        }
                    }
                }
            }
            catch(Exception e){

            }
        }
        return tab;
    }
    
    public void affichageNom(){
        if(Admin){
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:artdao.recuperer()){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Article> artdao=fac.getArticleDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:artdao.recuperer()){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
        }
    }
    
    public void affichagePrix(){
        if(Admin){
            ArrayList<Article> tab=new ArrayList<Article>();
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tab){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                bt.setBackground(Color.green);
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        else{
            ArrayList<Article> tab=new ArrayList<Article>();
            try{
                Connection con=Connexion.getConnection();
                AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
                DAO<Article> artdao=fac.getArticleDAO();
                Statement req=con.createStatement();
                ResultSet result=req.executeQuery("SELECT * FROM article ORDER BY prixart ASC");
                while(result.next()){
                   tab.add(artdao.rechercher(result.getInt("idart")));
                } 
            }
            catch(Exception e){
                
            }
            data=new ArrayList<ArrayList<Object>>();
            for(Article art:tab){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+art.getIdart());
                ligne.add(art.getNomart());
                ligne.add(art.getComart());
                ligne.add(""+art.getStock());
                ligne.add(""+art.getPrixart());
                ligne.add(art.getCatart().getNomcat());
                ligne.add(art.getFrs().getNomfrs());
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            jButton_ajout.setVisible(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_ajout;
    private javax.swing.JCheckBox jCheckBox_cat;
    private javax.swing.JCheckBox jCheckBox_frs;
    private javax.swing.JCheckBox jCheckBox_nom;
    private javax.swing.JCheckBox jCheckBox_prix;
    private javax.swing.JCheckBox jCheckBox_stock;
    private javax.swing.JComboBox<Object> jComboBox_cat;
    private javax.swing.JComboBox<Object> jComboBox_frs;
    private javax.swing.JComboBox<String> jComboBox_sup_prix;
    private javax.swing.JComboBox<String> jComboBox_sup_stock;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner_stock;
    private javax.swing.JTextField jTextField_nom;
    private javax.swing.JTextField jTextField_prix;
    private javax.swing.JTable tableau;
    // End of variables declaration//GEN-END:variables
}
