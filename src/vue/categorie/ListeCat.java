/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue.categorie;

import gestion.Article.Categorie;
import gestion.Authentification.AbstractDAO;
import gestion.Authentification.Connexion;
import gestion.Authentification.DAO;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import vue.IVue;
import vue.article.Button;
import vue.article.ButtonRenderer;
import vue.article.TModel;

/**
 *
 * @author VEK
 */
public class ListeCat extends javax.swing.JPanel implements IVue {
    private boolean Admin=false;
    private int IDGest=0;
    private ArrayList<ArrayList<Object>> data;
    private ArrayList<String> title= new ArrayList<String>();
    TModel modele;
    Connection con = Connexion.getConnection();
    /**
     * Creates new form Categorie
     */
    public ListeCat(boolean ad,int gest) {
        Admin=ad;
        IDGest=gest;
        initComponents();
        title.add("Id");
        title.add("Nom");
        title.add("Commentaire");
        title.add("Modification");
        title.add("Suppression");
        jTextField_nom.setVisible(false);
        jTextField_com.setVisible(false);
         AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Categorie> catdao=fac.getCategorieDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Categorie cat:catdao.recuperer()){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+cat.getIdcat());
                ligne.add(cat.getNomcat());
                ligne.add(cat.getComcat());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele=new TModel(data, title);
            tableau.setModel(modele);
            tableau.getColumn("Modification").setCellRenderer(new ButtonRenderer());
            tableau.getColumn("Suppression").setCellRenderer(new ButtonRenderer());
            tableau.getColumn("Modification").setCellEditor(new ButtonModifEditorCat(new JCheckBox(),Admin,IDGest)); 
            tableau.getColumn("Suppression").setCellEditor(new ButtonSuppEditorCat(new JCheckBox(),Admin,IDGest));
    }

    @Override
    public void afficher() {
        this.setVisible(true);
    }

    @Override
    public void cacher() {
        this.hide();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableau = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton_Ajouter = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jCheckBox_nom = new javax.swing.JCheckBox();
        jTextField_nom = new javax.swing.JTextField();
        jCheckBox_com = new javax.swing.JCheckBox();
        jTextField_com = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tableau.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableau.setRowHeight(25);
        tableau.setShowHorizontalLines(false);
        tableau.setShowVerticalLines(false);
        tableau.getTableHeader().setResizingAllowed(false);
        jScrollPane1.setViewportView(tableau);

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));

        jButton_Ajouter.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton_Ajouter.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Ajouter.setText("Ajouter");
        jButton_Ajouter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Ajouter.setContentAreaFilled(false);
        jButton_Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AjouterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton_Ajouter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton_Ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 967, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Type recherche :");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Recherche :");

        jCheckBox_nom.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_nom.setText("Nom");
        jCheckBox_nom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_nomItemStateChanged(evt);
            }
        });

        jTextField_nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_nomKeyReleased(evt);
            }
        });

        jCheckBox_com.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_com.setText("commentaire");
        jCheckBox_com.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_comItemStateChanged(evt);
            }
        });

        jTextField_com.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_comKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTextField_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox_nom)))
                .addGap(82, 82, 82)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_com)
                    .addComponent(jTextField_com, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(553, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBox_com)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(jTextField_com, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox_nom)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AjouterActionPerformed
        // TODO add your handling code here:
        IVue vue=new Ajouter(tableau);
        vue.afficher();
    }//GEN-LAST:event_jButton_AjouterActionPerformed

    private void jCheckBox_nomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_nomItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_nom.isSelected()){
            jTextField_nom.setVisible(true);
            jPanel4.validate();
            affichageNom();
        }
        else
            jTextField_nom.setVisible(false);
            jPanel4.validate();
    }//GEN-LAST:event_jCheckBox_nomItemStateChanged

    private void jTextField_nomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_nomKeyReleased
        // TODO add your handling code here:
        ArrayList<Categorie> tab=nom_selected();
        if(jCheckBox_nom.isSelected()){
           if(Admin){
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Categorie> catdao=fac.getCategorieDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Categorie cat:tab){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+cat.getIdcat());
                ligne.add(cat.getNomcat());
                ligne.add(cat.getComcat());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            } 
           
        }
    }//GEN-LAST:event_jTextField_nomKeyReleased

    private void jCheckBox_comItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_comItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox_com.isSelected()){
            jTextField_com.setVisible(true);
            jPanel4.validate();
            affichageNom();
        }
        else
            jTextField_nom.setVisible(false);
            jPanel4.validate();
    }//GEN-LAST:event_jCheckBox_comItemStateChanged
    public ArrayList<Categorie> nom_selected(){
        String nom;
        nom=jTextField_nom.getText();
        Connection con=Connexion.getConnection();
        ArrayList<Categorie> tab=new ArrayList<Categorie>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Categorie> catdao=fac.getCategorieDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM categorie WHERE nomcat like "+" \"%"+nom+"%\"");
            while(result.next()){
                tab.add(catdao.rechercher(result.getInt("idcat")));
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return tab;
    }
    public ArrayList<Categorie> com_selected(){
        String nom;
        nom=jTextField_com.getText();
        Connection con=Connexion.getConnection();
        ArrayList<Categorie> tab=new ArrayList<Categorie>();
        AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
        DAO<Categorie> catdao=fac.getCategorieDAO();
        try{
            Statement req=con.createStatement();
            ResultSet result=req.executeQuery("SELECT * FROM categorie WHERE comcat like "+" \"%"+nom+"%\"");
            while(result.next()){
                tab.add(catdao.rechercher(result.getInt("idcat")));
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return tab;
    }
    
    private void jTextField_comKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_comKeyReleased
        // TODO add your handling code here:
        ArrayList<Categorie> tab=com_selected();
        if(jCheckBox_com.isSelected()){
           if(Admin){
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Categorie> catdao=fac.getCategorieDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Categorie cat:tab){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+cat.getIdcat());
                ligne.add(cat.getNomcat());
                ligne.add(cat.getComcat());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            } 
           
        }
    }//GEN-LAST:event_jTextField_comKeyReleased
    public void affichageNom(){
        if(Admin){
            AbstractDAO fac = AbstractDAO.getFactory(AbstractDAO.MYSQL_DAO_FACTORY);
            DAO<Categorie> catdao=fac.getCategorieDAO();
            data=new ArrayList<ArrayList<Object>>();
            for(Categorie cat:catdao.recuperer()){
                ArrayList<Object> ligne=new ArrayList<Object>();
                ligne.add(""+cat.getIdcat());
                ligne.add(cat.getNomcat());
                ligne.add(cat.getComcat());
                Button bt=new Button("Modifier");
                Button bt1=new Button("Supprimer");
                ligne.add(bt);
                ligne.add(bt1);
                data.add(ligne);
            }
            modele.setData(data);
            tableau.setModel(modele);
            tableau.repaint();
            }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Ajouter;
    private javax.swing.JCheckBox jCheckBox_com;
    private javax.swing.JCheckBox jCheckBox_nom;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField_com;
    private javax.swing.JTextField jTextField_nom;
    private javax.swing.JTable tableau;
    // End of variables declaration//GEN-END:variables
}
